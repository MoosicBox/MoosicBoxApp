name: Prepare MoosicBoxApp Release

on:
    release:
        types: [published, edited]

env:
    CARGO_TERM_COLOR: always

jobs:
    package:
        permissions: write-all

        runs-on: ${{ matrix.release.os }}

        strategy:
            fail-fast: false
            matrix:
                release:
                    - os: ubuntu-latest
                      profile: release-lto
                      target: release

                    - os: ubuntu-latest
                      profile: debug
                      target: debug

                    - os: windows-latest
                      profile: release-lto
                      target: release

                    - os: windows-latest
                      profile: debug
                      target: debug

                    - os: macos-latest
                      profile: release
                      target: release

                    - os: macos-latest
                      profile: debug
                      target: debug

        steps:
            - name: Checkout audiotags
              uses: actions/checkout@master
              with:
                  repository: BSteffaniak/audiotags
                  ref: feat/add-full-date-capabilities
                  path: audiotags

            - name: Checkout MoosicBoxServer
              uses: actions/checkout@master
              with:
                  repository: MoosicBox/MoosicBoxServer
                  path: MoosicBoxServer

            - uses: actions/checkout@v3
              with:
                  path: MoosicBoxApp

            - name: Get package version
              id: package_version
              working-directory: MoosicBoxApp/src-tauri
              shell: bash
              run: |
                  VERSION="$(cargo metadata --format-version=1 --no-deps | jq --raw-output '.packages[0].version')"
                  echo "version: $VERSION"
                  echo "version=$VERSION" >> $GITHUB_OUTPUT

            - name: ⚡ Cache cargo
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.cargo/registry
                      ~/.cargo/git
                      target
                  key: ${{ matrix.release.name }}-cargo-${{ hashFiles('**/Cargo.lock') }}

            - name: Install Dependencies
              if: ${{ matrix.release.name == 'ubuntu-latest' }}
              run: |
                  sudo apt update
                  sudo apt install libwebkit2gtk-4.0-dev \
                      build-essential \
                      curl \
                      wget \
                      file \
                      libssl-dev \
                      libgtk-3-dev \
                      libayatana-appindicator3-dev \
                      librsvg2-dev \
                      libasound2-dev

            - name: Checkout MoosicBoxUI
              uses: actions/checkout@master
              with:
                  repository: MoosicBox/MoosicBoxUI
                  path: MoosicBoxUI

            - name: Copy Files
              working-directory: MoosicBoxApp
              shell: bash
              run: |
                  ./copy-files.sh

            - uses: pnpm/action-setup@v2
              name: Install pnpm
              with:
                  version: 8
                  run_install: false

            - name: Get pnpm store directory
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - name: ⚡ Cache pnpm
              uses: actions/cache@v3
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ matrix.release.name }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ matrix.release.name }}-pnpm-store-

            - name: pnpm install
              working-directory: MoosicBoxApp
              run: pnpm install

            - name: Build Tauri App
              working-directory: MoosicBoxApp
              env:
                  APTABASE_APP_KEY: ${{ secrets.APTABASE_APP_KEY }}
              run: pnpm tauri build${{ matrix.release.target == 'debug' && ' --debug' || ' -- --profile ' }}${{ matrix.release.target != 'debug' && matrix.release.profile || '' }}

            - name: Make assets directory
              shell: bash
              id: assets_dir
              run: |
                  mkdir assets
                  cd assets
                  echo "path=$(pwd)" >> $GITHUB_OUTPUT

            - name: Add moosicbox_amd64${{ matrix.release.target == 'debug' && '_debug' || '' }}.deb Asset
              if: ${{ matrix.release.name == 'ubuntu-latest' }}
              working-directory: MoosicBoxApp/src-tauri/target/${{ matrix.release.target }}/bundle
              run: |
                  mv deb/moosic-box_${{ steps.package_version.outputs.version }}_amd64.deb \
                      ${{ steps.assets_dir.outputs.path }}/moosicbox_amd64${{ matrix.release.target == 'debug' && '_debug' || '' }}.deb

            - name: Add MoosicBox_linux_amd64${{ matrix.release.target == 'debug' && '_debug' || '' }} Asset
              if: ${{ matrix.release.name == 'ubuntu-latest' }}
              working-directory: MoosicBoxApp/src-tauri/target/${{ matrix.release.target }}
              run: |
                  mv moosic-box ${{ steps.assets_dir.outputs.path }}/moosicbox_linux_amd64${{ matrix.release.target == 'debug' && '_debug' || '' }}

            - name: Add MoosicBox_amd64${{ matrix.release.target == 'debug' && '_debug' || '' }}.AppImage Asset
              if: ${{ matrix.release.name == 'ubuntu-latest' }}
              working-directory: MoosicBoxApp/src-tauri/target/${{ matrix.release.target }}/bundle
              run: |
                  mv appimage/moosic-box_${{ steps.package_version.outputs.version }}_amd64.AppImage \
                      ${{ steps.assets_dir.outputs.path }}/moosicbox_amd64${{ matrix.release.target == 'debug' && '_debug' || '' }}.AppImage

            - name: Add MoosicBox_x64_macos${{ matrix.release.target == 'debug' && '_debug' || '' }}_app Asset
              if: ${{ matrix.release.name == 'macos-latest' }}
              shell: bash
              run: |
                  7z \
                      a \
                      -mx=9 \
                      -tzip \
                      ${{ steps.assets_dir.outputs.path }}/MoosicBox_x64_macos${{ matrix.release.target == 'debug' && '_debug' || '' }}_app.zip \
                      MoosicBoxApp/src-tauri/target/${{ matrix.release.target }}/bundle/macos/MoosicBox.app

            - name: Add MoosicBox_macos_x64${{ matrix.release.target == 'debug' && '_debug' || '' }} Asset
              if: ${{ matrix.release.name == 'macos-latest' }}
              working-directory: MoosicBoxApp/src-tauri/target/${{ matrix.release.target }}
              run: |
                  mv MoosicBox ${{ steps.assets_dir.outputs.path }}/MoosicBox_macos_x64${{ matrix.release.target == 'debug' && '_debug' || '' }}

            - name: Add MoosicBox_x64${{ matrix.release.target == 'debug' && '_debug' || '' }}.dmg Asset
              if: ${{ matrix.release.name == 'macos-latest' }}
              working-directory: MoosicBoxApp/src-tauri/target/${{ matrix.release.target }}/bundle
              run: |
                  mv dmg/MoosicBox_${{ steps.package_version.outputs.version }}_x64.dmg \
                      ${{ steps.assets_dir.outputs.path }}/MoosicBox_x64${{ matrix.release.target == 'debug' && '_debug' || '' }}.dmg

            - name: Add MoosicBox_x64${{ matrix.release.target == 'debug' && '_debug' || '' }}.exe Asset
              if: ${{ matrix.release.name == 'windows-latest' }}
              working-directory: MoosicBoxApp/src-tauri/target/${{ matrix.release.target }}
              shell: bash
              run: |
                  mv MoosicBox.exe ${{ steps.assets_dir.outputs.path }}/MoosicBox_x64${{ matrix.release.target == 'debug' && '_debug' || '' }}.exe

            - name: Add MoosicBox_x64-setup${{ matrix.release.target == 'debug' && '_debug' || '' }}.exe Asset
              if: ${{ matrix.release.name == 'windows-latest' }}
              working-directory: MoosicBoxApp/src-tauri/target/${{ matrix.release.target }}/bundle
              shell: bash
              run: |
                  mv nsis/MoosicBox_${{ steps.package_version.outputs.version }}_x64-setup.exe \
                      ${{ steps.assets_dir.outputs.path }}/MoosicBox_x64-setup${{ matrix.release.target == 'debug' && '_debug' || '' }}.exe

            - name: Add MoosicBox_x64${{ matrix.release.target == 'debug' && '_debug' || '' }}.msi Asset
              if: ${{ matrix.release.name == 'windows-latest' }}
              working-directory: MoosicBoxApp/src-tauri/target/${{ matrix.release.target }}/bundle
              shell: bash
              run: |
                  mv msi/MoosicBox_${{ steps.package_version.outputs.version }}_x64_en-US.msi \
                      ${{ steps.assets_dir.outputs.path }}/MoosicBox_x64${{ matrix.release.target == 'debug' && '_debug' || '' }}.msi

            - name: Delete Linux Assets
              uses: mknejp/delete-release-assets@v1
              if: ${{ matrix.release.name == 'ubuntu-latest' }}
              with:
                  fail-if-no-assets: false
                  token: ${{ github.token }}
                  tag: ${{ github.event.release.tag_name }}
                  repository: ${{ github.repository }}
                  assets: |
                      MoosicBox_amd64${{ matrix.release.target == 'debug' && '_debug' || '' }}.deb
                      MoosicBox_amd64${{ matrix.release.target == 'debug' && '_debug' || '' }}.AppImage

            - name: Delete Mac Assets
              uses: mknejp/delete-release-assets@v1
              if: ${{ matrix.release.name == 'macos-latest' }}
              with:
                  fail-if-no-assets: false
                  token: ${{ github.token }}
                  tag: ${{ github.event.release.tag_name }}
                  repository: ${{ github.repository }}
                  assets: |
                      MoosicBox_x64_macos${{ matrix.release.target == 'debug' && '_debug' || '' }}_app.zip
                      MoosicBox_x64${{ matrix.release.target == 'debug' && '_debug' || '' }}.dmg

            - name: Delete Windows Assets
              uses: mknejp/delete-release-assets@v1
              if: ${{ matrix.release.name == 'windows-latest' }}
              with:
                  fail-if-no-assets: false
                  token: ${{ github.token }}
                  tag: ${{ github.event.release.tag_name }}
                  repository: ${{ github.repository }}
                  assets: |
                      MoosicBox_x64-setup${{ matrix.release.target == 'debug' && '_debug' || '' }}.exe
                      MoosicBox_x64${{ matrix.release.target == 'debug' && '_debug' || '' }}.msi

            - name: Upload Assets
              uses: softprops/action-gh-release@v1
              with:
                  token: ${{ secrets.WORKFLOW_MANAGEMENT_TOKEN }}
                  files: assets/*

    compress:
        permissions: write-all

        runs-on: ubuntu-latest
        needs: package

        strategy:
            fail-fast: false
            matrix:
                compression:
                    - algorithm: xz
                      extension: xz
                      replace_extension: false
                      compression_level: 9
                      tar: true
                    - algorithm: 7z
                      extension: 7z
                      replace_extension: true
                      compression_level: 9
                      tar: false
                    - algorithm: bzip2
                      extension: bz2
                      replace_extension: false
                      compression_level: 9
                      tar: true
                    - algorithm: gzip
                      extension: gz
                      replace_extension: false
                      compression_level: 9
                      tar: true
                    - algorithm: zip
                      extension: zip
                      replace_extension: true
                      compression_level: 9
                      tar: false
                asset:
                    - name: MoosicBox_x64_macos
                      extension: app
                      decompress: true
                      decompress_file: MoosicBox_x64_macos_app.zip
                      decompress_algorithm: zip
                    - name: MoosicBox_x64_macos_debug
                      extension: app
                      decompress: true
                      decompress_file: MoosicBox_x64_macos_debug_app.zip
                      decompress_algorithm: zip

        steps:
            - name: Set asset names
              id: asset_names
              run: |
                  RAW_NAME="${{ format('{0}{1}{2}', matrix.asset.name, matrix.asset.decompress && '_' || '.', matrix.asset.extension) }}"
                  echo "raw_name=$RAW_NAME" >> $GITHUB_OUTPUT
                  echo "existing=${{ matrix.asset.decompress && matrix.asset.decompress_file || format('{0}.{1}', matrix.asset.name, matrix.asset.extension) }}" >> $GITHUB_OUTPUT
                  INPUT="$RAW_NAME${{ matrix.asset.decompress && matrix.compression.tar && '.tar' || '' }}" >> $GITHUB_OUTPUT
                  echo "input=$INPUT" >> $GITHUB_OUTPUT
                  echo "output=${INPUT}.${{ matrix.compression.extension }}" >> $GITHUB_OUTPUT

            - name: Download ${{ matrix.asset }} Asset
              uses: dsaltares/fetch-gh-release-asset@master
              with:
                  repo: ${{ github.repository }}
                  file: ${{ steps.asset_names.outputs.existing }}
                  version: ${{ github.event.release.id }}

            - name: Decompress
              if: ${{ matrix.asset.decompress }}
              run: |
                  7z \
                      x \
                      -t${{ matrix.asset.decompress_algorithm }} \
                      ${{ steps.asset_names.outputs.existing }} \
                      -o${{ steps.asset_names.outputs.raw_name }}

            - name: Tar
              if: ${{ matrix.asset.decompress && matrix.compression.tar }}
              run: |
                  tar \
                      -cvf \
                      ${{ steps.asset_names.outputs.input }} \
                      ${{ steps.asset_names.outputs.raw_name }}

            - name: Compress ${{ matrix.asset }}
              run: |
                  7z \
                      a \
                      -mx=${{ matrix.compression.compression_level }} \
                      -t${{ matrix.compression.algorithm }} \
                      ${{ steps.asset_names.outputs.output }} \
                      ${{ steps.asset_names.outputs.input }}

            - name: Delete ${{ steps.asset_names.outputs.output }} Asset
              uses: mknejp/delete-release-assets@v1
              with:
                  fail-if-no-assets: false
                  token: ${{ github.token }}
                  tag: ${{ github.event.release.tag_name }}
                  repository: ${{ github.repository }}
                  assets: ${{ steps.asset_names.outputs.output }}

            - name: Upload Assets
              uses: softprops/action-gh-release@v1
              with:
                  token: ${{ secrets.WORKFLOW_MANAGEMENT_TOKEN }}
                  files: ${{ steps.asset_names.outputs.output }}
